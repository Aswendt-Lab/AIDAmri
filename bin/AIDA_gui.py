#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.22
#  in conjunction with Tcl version 8.6
#    Apr 30, 2019 09:28:52 AM CEST  platform: Darwin

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True

import AIDA_gui_support


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    AIDA_gui_support.set_Tk_var()
    top = topLevelGUI(root)
    AIDA_gui_support.init(root, top)
    root.mainloop()


w = None


def create_topLevelGUI(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel(root)
    AIDA_gui_support.set_Tk_var()
    top = topLevelGUI(w)
    AIDA_gui_support.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_topLevelGUI():
    global w
    w.destroy()
    w = None


class topLevelGUI:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.', background=_bgcolor)
        self.style.configure('.', foreground=_fgcolor)
        self.style.configure('.', font="TkDefaultFont")
        self.style.map('.', background=
        [('selected', _compcolor), ('active', _ana2color)])

        top.geometry("551x354+495+141")
        top.title("AIDAmri")
        top.configure(background="#d9d9d9")

        self.Labelframe1 = tk.LabelFrame(top)
        self.Labelframe1.place(relx=0.073, rely=0.621, relheight=0.155
                               , relwidth=0.835)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(foreground="black")
        self.Labelframe1.configure(text='''Input filename''')
        self.Labelframe1.configure(background="#d9d9d9")
        self.Labelframe1.configure(width=460)

        self.entryFilename = tk.Entry(self.Labelframe1)
        self.entryFilename.place(relx=0.022, rely=0.364, height=27
                                 , relwidth=0.722, bordermode='ignore')
        self.entryFilename.configure(background="white")
        self.entryFilename.configure(font="-family {Monaco} -size 11")
        self.entryFilename.configure(foreground="#000000")
        self.entryFilename.configure(insertbackground="black")
        self.entryFilename.configure(textvariable=AIDA_gui_support.filenameStr)
        self.entryFilename.configure(width=332)

        self.Labelframe2 = tk.LabelFrame(top)
        self.Labelframe2.place(relx=0.073, rely=0.056, relheight=0.523
                               , relwidth=0.454)
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(foreground="black")
        self.Labelframe2.configure(text='''Data Options''')
        self.Labelframe2.configure(background="#d9d9d9")
        self.Labelframe2.configure(width=250)

        self.style.map('TCheckbutton', background=
        [('selected', _bgcolor), ('active', _ana2color)])
        self.checkRaw = ttk.Checkbutton(self.Labelframe2)
        self.checkRaw.place(relx=0.08, rely=0.162, relwidth=0.604, relheight=0.0
                            , height=22, bordermode='ignore')
        self.checkRaw.configure(variable=AIDA_gui_support.rawVal)
        self.checkRaw.configure(command=AIDA_gui_support.rawCheck_cmd)
        self.checkRaw.configure(takefocus="")
        self.checkRaw.configure(text='''RAW Data''')
        self.checkRaw.configure(width=151)

        self.checkT2 = ttk.Checkbutton(self.Labelframe2)
        self.checkT2.place(relx=0.08, rely=0.351, relwidth=0.604, relheight=0.0
                           , height=22, bordermode='ignore')
        self.checkT2.configure(variable=AIDA_gui_support.t2Val)
        self.checkT2.configure(command=AIDA_gui_support.t2Check_cmd)
        self.checkT2.configure(takefocus="")
        self.checkT2.configure(text='''T2 Data''')
        self.checkT2.configure(width=151)

        self.checkDTI = ttk.Checkbutton(self.Labelframe2)
        self.checkDTI.place(relx=0.08, rely=0.541, relwidth=0.604, relheight=0.0
                            , height=22, bordermode='ignore')
        self.checkDTI.configure(variable=AIDA_gui_support.dtiVal)
        self.checkDTI.configure(command=AIDA_gui_support.DTI_cmd)
        self.checkDTI.configure(takefocus="")
        self.checkDTI.configure(text='''DTI Data''')
        self.checkDTI.configure(width=151)

        self.checkfMRI = ttk.Checkbutton(self.Labelframe2)
        self.checkfMRI.place(relx=0.08, rely=0.757, relwidth=0.604, relheight=0.0
                             , height=22, bordermode='ignore')
        self.checkfMRI.configure(variable=AIDA_gui_support.fmriVal)
        self.checkfMRI.configure(command=AIDA_gui_support.fMRI_cmd)
        self.checkfMRI.configure(takefocus="")
        self.checkfMRI.configure(text='''fMRI Data''')
        self.checkfMRI.configure(width=151)

        self.Labelframe3 = tk.LabelFrame(top)
        self.Labelframe3.place(relx=0.563, rely=0.056, relheight=0.523
                               , relwidth=0.345)
        self.Labelframe3.configure(relief='groove')
        self.Labelframe3.configure(foreground="black")
        self.Labelframe3.configure(text='''Processing Options''')
        self.Labelframe3.configure(background="#d9d9d9")
        self.Labelframe3.configure(width=190)

        self.checkPre = ttk.Checkbutton(self.Labelframe3)
        self.checkPre.place(relx=0.105, rely=0.162, relwidth=0.742, relheight=0.0
                            , height=22, bordermode='ignore')
        self.checkPre.configure(variable=AIDA_gui_support.preVal)
        self.checkPre.configure(command=AIDA_gui_support.pre_cmd)
        self.checkPre.configure(takefocus="")
        self.checkPre.configure(text='''Preprocessing''')
        self.checkPre.configure(width=141)

        self.checkReg = ttk.Checkbutton(self.Labelframe3)
        self.checkReg.place(relx=0.105, rely=0.378, relwidth=0.742, relheight=0.0
                            , height=22, bordermode='ignore')
        self.checkReg.configure(variable=AIDA_gui_support.regVal)
        self.checkReg.configure(command=AIDA_gui_support.reg_cmd)
        self.checkReg.configure(takefocus="")
        self.checkReg.configure(text='''Registration''')
        self.checkReg.configure(width=141)

        self.checkPost = ttk.Checkbutton(self.Labelframe3)
        self.checkPost.place(relx=0.105, rely=0.568, relwidth=0.742
                             , relheight=0.0, height=22, bordermode='ignore')
        self.checkPost.configure(variable=AIDA_gui_support.postVal)
        self.checkPost.configure(command=AIDA_gui_support.post_cmd)
        self.checkPost.configure(takefocus="")
        self.checkPost.configure(text='''Postprocessing''')
        self.checkPost.configure(width=141)

        self.entryCode = tk.Entry(top)
        self.entryCode.place(relx=0.073, rely=0.847, height=27, relwidth=0.621)
        self.entryCode.configure(background="white")
        self.entryCode.configure(cursor="fleur")
        self.entryCode.configure(font="-family {Monaco} -size 11")
        self.entryCode.configure(foreground="#000000")
        self.entryCode.configure(insertbackground="black")
        self.entryCode.configure(state='readonly')
        self.entryCode.configure(textvariable=AIDA_gui_support.codetxt)
        self.entryCode.configure(width=342)

        self.applyT = ttk.Button(top)
        self.applyT.place(relx=0.726, rely=0.847, height=24, width=87)
        self.applyT.configure(command=AIDA_gui_support.apply_cmdT)
        self.applyT.configure(takefocus="")
        self.applyT.configure(text='''Apply''')
        self.applyT.configure(width=87)

        self.openButton = ttk.Button(top)
        self.openButton.place(relx=0.726, rely=0.678, height=24, width=87)
        self.openButton.configure(command=AIDA_gui_support.open_cmd)
        self.openButton.configure(takefocus="")
        self.openButton.configure(text='''Open''')


if __name__ == '__main__':
    vp_start_gui()
